--====================================JOIN TABLE=================================
CREATE SEQUENCE MEMBER_JOIN_SEQ;
CREATE TABLE MEMBER_JOIN(
   JOIN_NO           NUMBER            NOT NULL,
   ID                VARCHAR2(200)       NOT NULL,
   JOIN_PW           VARCHAR2(200)       NOT NULL,
   JOIN_EMAIL        VARCHAR2(200)       NOT NULL,
   JOIN_ROLE         CHAR(6)            NOT NULL,
   JOIN_DATE         DATE              NOT NULL,
   JOIN_JOINED       CHAR(1)           NOT NULL,
   JOIN_REGISTER_YN    CHAR(1)          NOT NULL, 
   CONSTRAINT JOIN_PK PRIMARY KEY (ID),
   CONSTRAINT JOIN_UQ01 UNIQUE (JOIN_NO),
   CONSTRAINT JOIN_UQ02 UNIQUE (JOIN_EMAIL),
   CONSTRAINT JOIN_CH01_ROLE CHECK (JOIN_ROLE IN('멘토', '멘티', '관리')),
   CONSTRAINT JOIN_CH02_JOINED CHECK (JOIN_JOINED IN('Y','N')),
   CONSTRAINT JOIN_CH03_REGISTER CHECK (JOIN_REGISTER_YN IN('Y','N','W'))
);

--MENTEE01 
INSERT INTO MEMBER_JOIN VALUES (
   MEMBER_JOIN_SEQ.NEXTVAL,
   'MENTEE01',
   '1234',
   'MENTEE01@GMAIL.COM',
   '멘티',
   SYSDATE,
   'Y',
   'Y'
);

--MENTEE02
INSERT INTO MEMBER_JOIN VALUES (
   MEMBER_JOIN_SEQ.NEXTVAL,
   'MENTEE02',
   '1234',
   'MENTEE02@GMAIL.COM',
   '멘티',
   SYSDATE,
   'Y',
   'Y'
);

--MENTOR01
INSERT INTO MEMBER_JOIN VALUES (
   MEMBER_JOIN_SEQ.NEXTVAL,
   'MENTOR01',
   '1234',
   'MENTOR01@GMAIL.COM',
   '멘토',
   SYSDATE,
   'Y',
   'Y'
);
--ADMIN
INSERT INTO MEMBER_JOIN VALUES (
   MEMBER_JOIN_SEQ.NEXTVAL,
   'ADMIN',
   '1234',
   'ADMIN@GMAIL.COM',
   '관리',
   SYSDATE,
   'Y',
   'N'
);

SELECT * FROM MEMBER_JOIN

DELETE 
FROM MEMBER_JOIN
WHERE JOIN_NO = 22;

--==============================================================================



--=================================MEMBER PROFILE===============================
CREATE SEQUENCE MEMBER_PROFILE_SEQ;
CREATE TABLE MEMBER_PROFILE
(
    MEMBER_NO             NUMBER            NOT NULL, 
    ID                    VARCHAR2(200)     NOT NULL, 
    MEMBER_ROLE           CHAR(6)           NOT NULL, 
    MEMBER_REGISTER_YN    CHAR(1)           NOT NULL, 
    MEMBER_NAME           VARCHAR2(20)      NOT NULL, 
    MEMBER_BIRTH          CHAR(8)           NOT NULL, 
    MEMBER_HEIGHT         NUMBER            NOT NULL, 
    MEMBER_WEIGHT         NUMBER            NOT NULL, 
    MEMBER_ADDR           VARCHAR2(1000)    NOT NULL, 
    MEMBER_PHONE          VARCHAR2(200)     NOT NULL, 
    MEMBER_ONE_INTRO      VARCHAR2(2000)    NOT NULL, 
    MEMBER_COIN           NUMBER,
    MEMBER_CAREER         VARCHAR2(4000), 
    MEMBER_CONTENT        VARCHAR2(4000), 
    MEMBER_SCORE          NUMBER, 
    MEMBER_GENDER         CHAR(1), 
    MEMBER_ACTIVITY       NUMBER, 
    MEMBER_BASAL          NUMBER, 
    MEMBER_BMI            NUMBER, 
    CONSTRAINT MEMBER_PROFILE_PK PRIMARY KEY (MEMBER_NO),
    CONSTRAINT MEMBER_PROFILE_UQ01 UNIQUE (ID),
    CONSTRAINT MEMBER_PROFILE_UQ02 UNIQUE (MEMBER_PHONE),
    CONSTRAINT MEMBER_PROFILE_CH01 CHECK (MEMBER_REGISTER_YN IN('Y','N')),
    CONSTRAINT MEMBER_PROFILE_CH02 CHECK (MEMBER_GENDER IN('F','M')),
    CONSTRAINT MEMBER_PROFILE_FK01 FOREIGN KEY(ID) REFERENCES MEMBER_JOIN(ID)
);

--MENTEE01 PROFILE
INSERT INTO MEMBER_PROFILE VALUES(
   MEMBER_PROFILE_SEQ.NEXTVAL, 
   'MENTEE01', 
   '멘티', 
   'Y',  
   '김멘티', 
   '20000104', 
   170, 
   56, 
   '서울특별시 강남구', 
   '010-1111-1111', 
   '저는 홈트를 좋아해요.', 
   0, 
   'NULL', 
   'NULL', 
   0,                 
   'M', 
   '2', 
   '0', 
   '0'); 
  
--MENTEE02 PROFILE
INSERT INTO MEMBER_PROFILE VALUES(
   MEMBER_PROFILE_SEQ.NEXTVAL, 
   'MENTEE02', 
   '멘티', 
   'Y',  
   '최자바', 
   '19960829', 
   170, 
   56, 
   '경기도 남양주시', 
   '010-0000-1111', 
   '건강하게 다이어트 하고 싶어요!', 
   0, 
   'NULL', 
   'NULL', 
   0,                 
   'F', 
   '3', 
   '0', 
   '0'); 

--MENTOR01 PROFILE
INSERT INTO MEMBER_PROFILE
VALUES(
MEMBER_PROFILE_SEQ.NEXTVAL, 'MENTOR01', '멘토', 
'Y',  '김코치', '19940104', 184, 83, 
'경기도 안양시', '010-0000-0000', '저는 헬스를 잘합니다.', 
0, '다이어트/헬스/건강', '경력은...',0,   --멘토
'', 1, 0, 0);

SELECT * FROM MEMBER_PROFILE

SELECT MEMBER_NO, ID, MEMBER_ROLE, MEMBER_REGISTER_YN, MEMBER_NAME, MEMBER_BIRTH, MEMBER_HEIGHT, MEMBER_WEIGHT, MEMBER_ADDR, MEMBER_PHONE, MEMBER_ONE_INTRO, MEMBER_COIN, MEMBER_CAREER, MEMBER_CONTENT, MEMBER_SCORE,MEMBER_GENDER, MEMBER_ACTIVITY, MEMBER_BASAL, MEMBER_BMI 
FROM MEMBER_PROFILE;

--==============================================================================


--================================MATCH TABLE===================================
CREATE SEQUENCE MEMBER_MATCH_SEQ;
CREATE TABLE MEMBER_MATCH(
   MATCH_NO NUMBER               NOT NULL,
   MATCH_MENTEE_ID VARCHAR2(200)          ,
   MATCH_MENTOR_ID VARCHAR2(200)    NOT NULL,
CONSTRAINT MATCH_PK PRIMARY KEY(MATCH_NO),
CONSTRAINT MATCH_MENTEE_ID_UQ01 UNIQUE (MATCH_MENTEE_ID),
CONSTRAINT MATCH_FK01 FOREIGN KEY(MATCH_MENTEE_ID) REFERENCES MEMBER_PROFILE(ID),
CONSTRAINT MATCH_FK02 FOREIGN KEY(MATCH_MENTOR_ID) REFERENCES MEMBER_PROFILE(ID)
);


--EX
INSERT INTO MEMBER_MATCH VALUES(MEMBER_MATCH_SEQ.NEXTVAL, 'MENTEE01', 'MENTOR01');
INSERT INTO MEMBER_MATCH VALUES(MEMBER_MATCH_SEQ.NEXTVAL, 'MENTEE02', 'MENTOR01');

SELECT * FROM MEMBER_MATCH

SELECT MATCH_MENTOR_ID
FROM MEMBER_MATCH
WHERE MATCH_MENTEE_ID = 'MENTEE01';

SELECT MATCH_MENTEE_ID
FROM MEMBER_MATCH
WHERE MATCH_MENTOR_ID = 'MENTOR01';


SELECT MATCH_NO, MATCH_MENTOR_ID
FROM MEMBER_MATCH
WHERE MATCH_MENTEE_ID = 'MENTEE01';


SELECT * FROM MEMBER_MATCH;

--==============================================================================


--==============================MENTEE_EXERCISE_TOTAL===========================
CREATE SEQUENCE MENTEE_EXERCISE_TOTAL_SEQ;
CREATE TABLE MENTEE_EXERCISE_TOTAL(
   TOTAL_NO           NUMBER                  NOT NULL,
   TOTAL_DATE         VARCHAR2(200)              NOT NULL,
   ID                 VARCHAR2(200)              NOT NULL,
   TOTAL_DAYOFWEEK    VARCHAR2(200)                    ,
   TOTAL_TIME         VARCHAR2(200)                        ,
   TOTAL_CALORIE      NUMBER                              ,
   TOTAL_WEIGHT       NUMBER                         ,
   CONSTRAINT MENTEE_EXERCISE_TOTAL_PK PRIMARY KEY (TOTAL_NO),
   CONSTRAINT MENTEE_EXERCISE_TOTAL_CH01 CHECK (TOTAL_DAYOFWEEK IN('일', '월', '화', '수', '목', '금', '토')),
   CONSTRAINT MENTEE_EXERCISE_TOTAL_FK01 FOREIGN KEY(ID) REFERENCES MEMBER_PROFILE(ID)
);

--MENTEE01
INSERT INTO MENTEE_EXERCISE_TOTAL VALUES (
   MENTEE_EXERCISE_TOTAL_SEQ.NEXTVAL,
   '20200123',
   'MENTEE01',
   '목',
   120,
   360,
   50
)

SELECT * FROM MENTEE_EXERCISE_TOTAL
--==============================================================================



--=======================================BOARD==================================

CREATE SEQUENCE BOARD_NO_SEQ;

CREATE SEQUENCE BOARD_CATEGORYNO_BOARD_SEQ;
CREATE SEQUENCE BOARD_CATEGORYNO_EXERCISE_SEQ;
CREATE SEQUENCE BOARD_CATEGORYNO_REVIEW_SEQ;

CREATE SEQUENCE BOARD_GROUP_SEQ;
CREATE SEQUENCE BOARD_GROUP_NO_SEQ;

CREATE TABLE BOARD(
   BOARD_NO NUMBER                            NOT NULL,
   BOARD_CATEGORY VARCHAR2(200)                NOT NULL,
   BOARD_CATEGORY_NO NUMBER                   NOT NULL,
   BOARD_GROUP NUMBER                              ,
   BOARD_GROUP_NO NUMBER                           ,
   BOARD_TAB NUMBER                                 ,
   ID VARCHAR2(200)                                   ,
   BOARD_MEMBER_NAME VARCHAR2(200)                     ,
   BOARD_EXERCISE_NAME VARCHAR2(200)                  ,
   BOARD_TITLE VARCHAR2(2000)                        ,
   BOARD_CONTENT CLOB                         NOT NULL,
   BOARD_REGDATE DATE                         NOT NULL,
   BOARD_REVIEW_SCORE NUMBER                        ,
   BOARD_EXERCISE_CATEGORY VARCHAR2(200)               ,
   BOARD_EXERCISE_URL VARCHAR2(2000)                  ,
   CONSTRAINT BOARD_PK_BOARD_NO PRIMARY KEY (BOARD_NO),
   CONSTRAINT BOARD_UQ_BOARD_EXERCISE_NAME UNIQUE (BOARD_EXERCISE_NAME),
   CONSTRAINT BOARD_FK01 FOREIGN KEY(ID) REFERENCES MEMBER_PROFILE(ID)
);

SELECT * FROM BOARD

SELECT BOARD_NO, BOARD_CATEGORY, BOARD_CATEGORY_NO, BOARD_GROUP, BOARD_GROUP_NO, BOARD_TAB, ID, BOARD_MEMBER_NAME, BOARD_TITLE, BOARD_CONTENT, BOARD_REGDATE
FROM BOARD
WHERE BOARD_CATEGORY='게시판' AND ID = 'MENTEE' AND BOARD_GROUP_NO = 0
ORDER BY BOARD_CATEGORY_NO DESC

--BOARD.sql 에서 INSERT 하세요.

--==============================================================================



--=================================MEMBER_TRADE=================================
CREATE SEQUENCE MEMBER_TRADE_SEQ;
CREATE TABLE MEMBER_TRADE(
   TRADE_NO NUMBER                   NOT NULL,
   TRADE_TYPE CHAR(6)                  NOT NULL,
   ID VARCHAR2(200)                  NOT NULL,
   TRADE_NAME VARCHAR2(200)                    ,
   TRADE_BANKNAME VARCHAR2(200)               ,
   TRADE_BANKNUM VARCHAR2(1000)               ,
   TRADE_DATE DATE                     NOT NULL,
   TRADE_PRICE NUMBER                   NOT NULL,
   TRADE_SUCCESS_CODE VARCHAR2(200)            ,
   CONSTRAINT MEMBER_TRADE_PK PRIMARY KEY (TRADE_NO),
   CONSTRAINT MEMBER_TRADE_FK01 FOREIGN KEY(ID) REFERENCES MEMBER_PROFILE(ID)
);

--MENTEE01
INSERT INTO MEMBER_TRADE VALUES (
   MEMBER_TRADE_SEQ.NEXTVAL,
   '입금',
   'MENTEE01',
   '김멘티',
   '우리은행',
   '2837394234837427',
   SYSDATE,
   23000,
   '4444'
)

SELECT * FROM MEMBER_TRADE;
--==============================================================================




--======================================FOOD====================================
CREATE SEQUENCE FOOD_SEQ START WITH 9096;
CREATE TABLE FOOD
(
    FOOD_NO         NUMBER           NOT NULL, 
    FOOD_NAME       VARCHAR2(200)    NOT NULL, 
    FOOD_GRAM       VARCHAR2(200)          ,
    FOOD_CAR        VARCHAR2(200)          , 
    FOOD_PRO        VARCHAR2(200)          , 
    FOOD_FAT        VARCHAR2(200)          , 
    FOOD_CALORIE    VARCHAR2(200)    NOT NULL, 
    CONSTRAINT FOOD_PK PRIMARY KEY (FOOD_NO),
    CONSTRAINT FOOD_UQ01 UNIQUE (FOOD_NAME)
)

INSERT INTO FOOD VALUES(FOOD_SEQ.NEXTVAL, '비둘기고기', '1', '30', '30', '30', '30');

SELECT * FROM FOOD;
--==============================================================================


--==============================MENTEE_DAY_MENU=================================
CREATE SEQUENCE MENTEE_DAY_MENU_SEQ;
CREATE TABLE MENTEE_DAY_MENU
(
    MENU_NO            NUMBER           NOT NULL, 
    ID                 VARCHAR2(200)    NOT NULL, 
    MENU_DATE          VARCHAR2(200)    NOT NULL, 
    FOOD_NAME            VARCHAR2(200)    NOT NULL, 
    MENU_GRAM         NUMBER          NOT NULL,
    MENU_MORNING       CHAR(1)                , 
    MENU_LUNCH         CHAR(1)                , 
    MENU_EVEN          CHAR(1)                , 
    MENU_SNACK           CHAR(1)                , 
    CONSTRAINT MENTEE_DAY_MENU_PK PRIMARY KEY (MENU_NO),
    CONSTRAINT MENTEE_DAY_MENU_CH01 CHECK (MENU_MORNING IN('Y','N')),
    CONSTRAINT MENTEE_DAY_MENU_CH02 CHECK (MENU_LUNCH IN('Y','N')),
    CONSTRAINT MENTEE_DAY_MENU_CH03 CHECK (MENU_EVEN IN('Y','N')),
    CONSTRAINT MENTEE_DAY_MENU_CH04 CHECK (MENU_SNACK IN('Y','N')),
    CONSTRAINT MENTEE_DAY_MENU_FK01 FOREIGN KEY(ID) REFERENCES MEMBER_PROFILE(ID),
    CONSTRAINT MENTEE_DAY_MENU_FK02 FOREIGN KEY(FOOD_NAME) REFERENCES FOOD(FOOD_NAME)
)

--MENTEE01
INSERT INTO MENTEE_DAY_MENU
VALUES (
   MENTEE_DAY_MENU_SEQ.NEXTVAL,
   'MENTEE01',
   '20200123',
   '비둘기고기',
   120,
   NULL,
   'Y',
   NULL,
   NULL
)


SELECT * FROM MENTEE_DAY_MENU;
--==============================================================================



--============================MENTEE_EXERCISE_PLAN==============================
CREATE SEQUENCE MENTEE_EXERCISE_PLAN_SEQ;
CREATE TABLE MENTEE_EXERCISE_PLAN
(
    PLAN_NO           NUMBER              NOT NULL, 
    PLAN_DATE         VARCHAR2(200)      NOT NULL, 
    ID                VARCHAR2(200)       NOT NULL, 
    PLAN_CATEGORY     VARCHAR2(200)       NOT NULL, 
    EXERCISE_NAME     VARCHAR2(200)     NOT NULL, 
    PLAN_COUNT        NUMBER                , 
    PLAN_TIME         NUMBER                , 
    PLAN_DAYOFWEEK    VARCHAR2(20)      NOT NULL,
    PLAN_KINDS    VARCHAR2(20)      	 NOT NULL,
    CONSTRAINT MENTEE_EXERCISE_PLAN_PK PRIMARY KEY (PLAN_NO),
    CONSTRAINT MENTEE_EXERCISE_PLAN_FK01 FOREIGN KEY(ID) REFERENCES MEMBER_PROFILE(ID),
    CONSTRAINT MENTEE_EXERCISE_PLAN_FK02 FOREIGN KEY(EXERCISE_NAME) REFERENCES BOARD(BOARD_EXERCISE_NAME),
    CONSTRAINT MENTEE_EXERCISE_PLAN_CH01 CHECK (PLAN_DAYOFWEEK IN('일', '월', '화', '수', '목', '금', '토')),
    CONSTRAINT MENTEE_EXERCISE_PLAN_CH02 CHECK (PLAN_KINDS IN('P', 'C'))
)


--MENTEE01
INSERT INTO MENTEE_EXERCISE_PLAN VALUES (
   MENTEE_EXERCISE_PLAN_SEQ.NEXTVAL,
   '20200201',
   'MENTEE01',
   '가슴',
   '베이직 푸쉬업',
   20,
   NULL,
   '토',
   'P'
)
SELECT * FROM MENTEE_EXERCISE_PLAN;
--==============================================================================



--=====================================JOIN TEST================================
SELECT B.BOARD_CONTENT
FROM MEMBER_PROFILE P, MENTEE_EXERCISE_PLAN E, BOARD B
WHERE P.ID = E.ID AND E.ID = B.ID;

SELECT *
FROM MEMBER_PROFILE JOIN MENTEE_EXERCISE_PLAN USING (ID) JOIN BOARD USING (ID)


SELECT *
FROM FOOD JOIN MENTEE_DAY_MENU USING (FOOD_NO)

SELECT F.FOOD_NO
FROM MEMBER_PROFILE P, MENTEE_DAY_MENU M, FOOD F
WHERE P.ID = M.ID AND M.FOOD_NO = F.FOOD_NO;


SELECT SUM(FOOD_CALORIE * (FOOD_GRAM * MENU_GRAM))
      FROM MENTEE_DAY_MENU JOIN FOOD USING (FOOD_NO)
      WHERE FOOD_NO IN (
         SELECT FOOD_NO
         FROM MENTEE_DAY_MENU
) AND MENU_DATE IN '20200123'


    UPDATE MEMBER_PROFILE
      SET MEMBER_COIN = MEMBER_COIN, MEMBER_SCORE = MEMBER_SCORE + '1'
      WHERE ID = 'MENTOR01'
      
      SELECT * FROM MEMBER_PROFILE